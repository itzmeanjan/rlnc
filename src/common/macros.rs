//! These MACROs help you generate lookup tables, in compile-time, so that you can perform AVX2 and SSSE3 optimized
//! SIMD vector x single-scalar multiplication over GF(2^8), during RLNC erasure-coding. These table generation logic
//! is from https://github.com/ceph/gf-complete/blob/a6862d10c9db467148f20eef2c6445ac9afd94d8/src/gf_w8.c#L1100-L1105.
//!
//! If you invoke `generate_gf256_simd_mul_table!(true)`, it should generate `htd->low` part, described in above link.
//! Plain Rust code which should regenerate same table is as follows.
//!
//! ```rust,ignore
//! let _ = (0..=((GF256_ORDER-1) as u8))
//!     .map(|a| {
//!         let iter_first = (0..(GF256_HALF_ORDER as u8)).map(move |b| Gf256::mul_const(a, b));
//!         let iter_copy = (0..(GF256_HALF_ORDER as u8)).map(move |b| Gf256::mul_const(a, b));
//!
//!         iter_first.chain(iter_copy).collect::<Vec<u8>>()
//!     })
//!     .collect::<Vec<Vec<u8>>>();
//! ```
//!
//! If you invoke `generate_gf256_simd_mul_table!(false)`, it should generate `htd->high` part, described in above link.
//! Plain Rust code which should regenerate same table is as follows.
//!
//! ```rust,ignore
//! let _ = (0..=((GF256_ORDER-1) as u8))
//!     .map(|a| {
//!         let iter_first = (0..(GF256_HALF_ORDER as u8)).map(move |b| Gf256::mul_const(a, b << 4));
//!         let iter_copy = (0..(GF256_HALF_ORDER as u8)).map(move |b| Gf256::mul_const(a, b << 4));
//!
//!         iter_first.chain(iter_copy).collect::<Vec<u8>>()
//!     })
//!     .collect::<Vec<Vec<u8>>>();
//! ```

#[cfg(not(feature = "parallel"))]
macro_rules! generate_gf256_simd_mul_row {
    ($a:expr,$is_low_part:expr) => {
        [
            // First 16 elements should be used for SSSE3 SIMD implementation
            // of vector multiplication by single scalar over GF(2^8).
            Gf256::mul_const($a, if $is_low_part { 0 } else { 0 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 1 } else { 1 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 2 } else { 2 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 3 } else { 3 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 4 } else { 4 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 5 } else { 5 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 6 } else { 6 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 7 } else { 7 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 8 } else { 8 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 9 } else { 9 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 10 } else { 10 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 11 } else { 11 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 12 } else { 12 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 13 } else { 13 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 14 } else { 14 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 15 } else { 15 << 4 }),
            // Repeat the first 16 elements. The whole 32-bytes portion is
            // used for 256-bit AVX2 SIMD register based vector multiplication
            // by single scalar over GF(2^8).
            Gf256::mul_const($a, if $is_low_part { 0 } else { 0 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 1 } else { 1 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 2 } else { 2 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 3 } else { 3 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 4 } else { 4 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 5 } else { 5 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 6 } else { 6 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 7 } else { 7 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 8 } else { 8 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 9 } else { 9 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 10 } else { 10 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 11 } else { 11 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 12 } else { 12 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 13 } else { 13 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 14 } else { 14 << 4 }),
            Gf256::mul_const($a, if $is_low_part { 15 } else { 15 << 4 }),
        ]
    };
}

#[cfg(not(feature = "parallel"))]
macro_rules! generate_gf256_simd_mul_table {
    ($is_low_part:expr) => {
        [
            generate_gf256_simd_mul_row!(0, $is_low_part),
            generate_gf256_simd_mul_row!(1, $is_low_part),
            generate_gf256_simd_mul_row!(2, $is_low_part),
            generate_gf256_simd_mul_row!(3, $is_low_part),
            generate_gf256_simd_mul_row!(4, $is_low_part),
            generate_gf256_simd_mul_row!(5, $is_low_part),
            generate_gf256_simd_mul_row!(6, $is_low_part),
            generate_gf256_simd_mul_row!(7, $is_low_part),
            generate_gf256_simd_mul_row!(8, $is_low_part),
            generate_gf256_simd_mul_row!(9, $is_low_part),
            generate_gf256_simd_mul_row!(10, $is_low_part),
            generate_gf256_simd_mul_row!(11, $is_low_part),
            generate_gf256_simd_mul_row!(12, $is_low_part),
            generate_gf256_simd_mul_row!(13, $is_low_part),
            generate_gf256_simd_mul_row!(14, $is_low_part),
            generate_gf256_simd_mul_row!(15, $is_low_part),
            generate_gf256_simd_mul_row!(16, $is_low_part),
            generate_gf256_simd_mul_row!(17, $is_low_part),
            generate_gf256_simd_mul_row!(18, $is_low_part),
            generate_gf256_simd_mul_row!(19, $is_low_part),
            generate_gf256_simd_mul_row!(20, $is_low_part),
            generate_gf256_simd_mul_row!(21, $is_low_part),
            generate_gf256_simd_mul_row!(22, $is_low_part),
            generate_gf256_simd_mul_row!(23, $is_low_part),
            generate_gf256_simd_mul_row!(24, $is_low_part),
            generate_gf256_simd_mul_row!(25, $is_low_part),
            generate_gf256_simd_mul_row!(26, $is_low_part),
            generate_gf256_simd_mul_row!(27, $is_low_part),
            generate_gf256_simd_mul_row!(28, $is_low_part),
            generate_gf256_simd_mul_row!(29, $is_low_part),
            generate_gf256_simd_mul_row!(30, $is_low_part),
            generate_gf256_simd_mul_row!(31, $is_low_part),
            generate_gf256_simd_mul_row!(32, $is_low_part),
            generate_gf256_simd_mul_row!(33, $is_low_part),
            generate_gf256_simd_mul_row!(34, $is_low_part),
            generate_gf256_simd_mul_row!(35, $is_low_part),
            generate_gf256_simd_mul_row!(36, $is_low_part),
            generate_gf256_simd_mul_row!(37, $is_low_part),
            generate_gf256_simd_mul_row!(38, $is_low_part),
            generate_gf256_simd_mul_row!(39, $is_low_part),
            generate_gf256_simd_mul_row!(40, $is_low_part),
            generate_gf256_simd_mul_row!(41, $is_low_part),
            generate_gf256_simd_mul_row!(42, $is_low_part),
            generate_gf256_simd_mul_row!(43, $is_low_part),
            generate_gf256_simd_mul_row!(44, $is_low_part),
            generate_gf256_simd_mul_row!(45, $is_low_part),
            generate_gf256_simd_mul_row!(46, $is_low_part),
            generate_gf256_simd_mul_row!(47, $is_low_part),
            generate_gf256_simd_mul_row!(48, $is_low_part),
            generate_gf256_simd_mul_row!(49, $is_low_part),
            generate_gf256_simd_mul_row!(50, $is_low_part),
            generate_gf256_simd_mul_row!(51, $is_low_part),
            generate_gf256_simd_mul_row!(52, $is_low_part),
            generate_gf256_simd_mul_row!(53, $is_low_part),
            generate_gf256_simd_mul_row!(54, $is_low_part),
            generate_gf256_simd_mul_row!(55, $is_low_part),
            generate_gf256_simd_mul_row!(56, $is_low_part),
            generate_gf256_simd_mul_row!(57, $is_low_part),
            generate_gf256_simd_mul_row!(58, $is_low_part),
            generate_gf256_simd_mul_row!(59, $is_low_part),
            generate_gf256_simd_mul_row!(60, $is_low_part),
            generate_gf256_simd_mul_row!(61, $is_low_part),
            generate_gf256_simd_mul_row!(62, $is_low_part),
            generate_gf256_simd_mul_row!(63, $is_low_part),
            generate_gf256_simd_mul_row!(64, $is_low_part),
            generate_gf256_simd_mul_row!(65, $is_low_part),
            generate_gf256_simd_mul_row!(66, $is_low_part),
            generate_gf256_simd_mul_row!(67, $is_low_part),
            generate_gf256_simd_mul_row!(68, $is_low_part),
            generate_gf256_simd_mul_row!(69, $is_low_part),
            generate_gf256_simd_mul_row!(70, $is_low_part),
            generate_gf256_simd_mul_row!(71, $is_low_part),
            generate_gf256_simd_mul_row!(72, $is_low_part),
            generate_gf256_simd_mul_row!(73, $is_low_part),
            generate_gf256_simd_mul_row!(74, $is_low_part),
            generate_gf256_simd_mul_row!(75, $is_low_part),
            generate_gf256_simd_mul_row!(76, $is_low_part),
            generate_gf256_simd_mul_row!(77, $is_low_part),
            generate_gf256_simd_mul_row!(78, $is_low_part),
            generate_gf256_simd_mul_row!(79, $is_low_part),
            generate_gf256_simd_mul_row!(80, $is_low_part),
            generate_gf256_simd_mul_row!(81, $is_low_part),
            generate_gf256_simd_mul_row!(82, $is_low_part),
            generate_gf256_simd_mul_row!(83, $is_low_part),
            generate_gf256_simd_mul_row!(84, $is_low_part),
            generate_gf256_simd_mul_row!(85, $is_low_part),
            generate_gf256_simd_mul_row!(86, $is_low_part),
            generate_gf256_simd_mul_row!(87, $is_low_part),
            generate_gf256_simd_mul_row!(88, $is_low_part),
            generate_gf256_simd_mul_row!(89, $is_low_part),
            generate_gf256_simd_mul_row!(90, $is_low_part),
            generate_gf256_simd_mul_row!(91, $is_low_part),
            generate_gf256_simd_mul_row!(92, $is_low_part),
            generate_gf256_simd_mul_row!(93, $is_low_part),
            generate_gf256_simd_mul_row!(94, $is_low_part),
            generate_gf256_simd_mul_row!(95, $is_low_part),
            generate_gf256_simd_mul_row!(96, $is_low_part),
            generate_gf256_simd_mul_row!(97, $is_low_part),
            generate_gf256_simd_mul_row!(98, $is_low_part),
            generate_gf256_simd_mul_row!(99, $is_low_part),
            generate_gf256_simd_mul_row!(100, $is_low_part),
            generate_gf256_simd_mul_row!(101, $is_low_part),
            generate_gf256_simd_mul_row!(102, $is_low_part),
            generate_gf256_simd_mul_row!(103, $is_low_part),
            generate_gf256_simd_mul_row!(104, $is_low_part),
            generate_gf256_simd_mul_row!(105, $is_low_part),
            generate_gf256_simd_mul_row!(106, $is_low_part),
            generate_gf256_simd_mul_row!(107, $is_low_part),
            generate_gf256_simd_mul_row!(108, $is_low_part),
            generate_gf256_simd_mul_row!(109, $is_low_part),
            generate_gf256_simd_mul_row!(110, $is_low_part),
            generate_gf256_simd_mul_row!(111, $is_low_part),
            generate_gf256_simd_mul_row!(112, $is_low_part),
            generate_gf256_simd_mul_row!(113, $is_low_part),
            generate_gf256_simd_mul_row!(114, $is_low_part),
            generate_gf256_simd_mul_row!(115, $is_low_part),
            generate_gf256_simd_mul_row!(116, $is_low_part),
            generate_gf256_simd_mul_row!(117, $is_low_part),
            generate_gf256_simd_mul_row!(118, $is_low_part),
            generate_gf256_simd_mul_row!(119, $is_low_part),
            generate_gf256_simd_mul_row!(120, $is_low_part),
            generate_gf256_simd_mul_row!(121, $is_low_part),
            generate_gf256_simd_mul_row!(122, $is_low_part),
            generate_gf256_simd_mul_row!(123, $is_low_part),
            generate_gf256_simd_mul_row!(124, $is_low_part),
            generate_gf256_simd_mul_row!(125, $is_low_part),
            generate_gf256_simd_mul_row!(126, $is_low_part),
            generate_gf256_simd_mul_row!(127, $is_low_part),
            generate_gf256_simd_mul_row!(128, $is_low_part),
            generate_gf256_simd_mul_row!(129, $is_low_part),
            generate_gf256_simd_mul_row!(130, $is_low_part),
            generate_gf256_simd_mul_row!(131, $is_low_part),
            generate_gf256_simd_mul_row!(132, $is_low_part),
            generate_gf256_simd_mul_row!(133, $is_low_part),
            generate_gf256_simd_mul_row!(134, $is_low_part),
            generate_gf256_simd_mul_row!(135, $is_low_part),
            generate_gf256_simd_mul_row!(136, $is_low_part),
            generate_gf256_simd_mul_row!(137, $is_low_part),
            generate_gf256_simd_mul_row!(138, $is_low_part),
            generate_gf256_simd_mul_row!(139, $is_low_part),
            generate_gf256_simd_mul_row!(140, $is_low_part),
            generate_gf256_simd_mul_row!(141, $is_low_part),
            generate_gf256_simd_mul_row!(142, $is_low_part),
            generate_gf256_simd_mul_row!(143, $is_low_part),
            generate_gf256_simd_mul_row!(144, $is_low_part),
            generate_gf256_simd_mul_row!(145, $is_low_part),
            generate_gf256_simd_mul_row!(146, $is_low_part),
            generate_gf256_simd_mul_row!(147, $is_low_part),
            generate_gf256_simd_mul_row!(148, $is_low_part),
            generate_gf256_simd_mul_row!(149, $is_low_part),
            generate_gf256_simd_mul_row!(150, $is_low_part),
            generate_gf256_simd_mul_row!(151, $is_low_part),
            generate_gf256_simd_mul_row!(152, $is_low_part),
            generate_gf256_simd_mul_row!(153, $is_low_part),
            generate_gf256_simd_mul_row!(154, $is_low_part),
            generate_gf256_simd_mul_row!(155, $is_low_part),
            generate_gf256_simd_mul_row!(156, $is_low_part),
            generate_gf256_simd_mul_row!(157, $is_low_part),
            generate_gf256_simd_mul_row!(158, $is_low_part),
            generate_gf256_simd_mul_row!(159, $is_low_part),
            generate_gf256_simd_mul_row!(160, $is_low_part),
            generate_gf256_simd_mul_row!(161, $is_low_part),
            generate_gf256_simd_mul_row!(162, $is_low_part),
            generate_gf256_simd_mul_row!(163, $is_low_part),
            generate_gf256_simd_mul_row!(164, $is_low_part),
            generate_gf256_simd_mul_row!(165, $is_low_part),
            generate_gf256_simd_mul_row!(166, $is_low_part),
            generate_gf256_simd_mul_row!(167, $is_low_part),
            generate_gf256_simd_mul_row!(168, $is_low_part),
            generate_gf256_simd_mul_row!(169, $is_low_part),
            generate_gf256_simd_mul_row!(170, $is_low_part),
            generate_gf256_simd_mul_row!(171, $is_low_part),
            generate_gf256_simd_mul_row!(172, $is_low_part),
            generate_gf256_simd_mul_row!(173, $is_low_part),
            generate_gf256_simd_mul_row!(174, $is_low_part),
            generate_gf256_simd_mul_row!(175, $is_low_part),
            generate_gf256_simd_mul_row!(176, $is_low_part),
            generate_gf256_simd_mul_row!(177, $is_low_part),
            generate_gf256_simd_mul_row!(178, $is_low_part),
            generate_gf256_simd_mul_row!(179, $is_low_part),
            generate_gf256_simd_mul_row!(180, $is_low_part),
            generate_gf256_simd_mul_row!(181, $is_low_part),
            generate_gf256_simd_mul_row!(182, $is_low_part),
            generate_gf256_simd_mul_row!(183, $is_low_part),
            generate_gf256_simd_mul_row!(184, $is_low_part),
            generate_gf256_simd_mul_row!(185, $is_low_part),
            generate_gf256_simd_mul_row!(186, $is_low_part),
            generate_gf256_simd_mul_row!(187, $is_low_part),
            generate_gf256_simd_mul_row!(188, $is_low_part),
            generate_gf256_simd_mul_row!(189, $is_low_part),
            generate_gf256_simd_mul_row!(190, $is_low_part),
            generate_gf256_simd_mul_row!(191, $is_low_part),
            generate_gf256_simd_mul_row!(192, $is_low_part),
            generate_gf256_simd_mul_row!(193, $is_low_part),
            generate_gf256_simd_mul_row!(194, $is_low_part),
            generate_gf256_simd_mul_row!(195, $is_low_part),
            generate_gf256_simd_mul_row!(196, $is_low_part),
            generate_gf256_simd_mul_row!(197, $is_low_part),
            generate_gf256_simd_mul_row!(198, $is_low_part),
            generate_gf256_simd_mul_row!(199, $is_low_part),
            generate_gf256_simd_mul_row!(200, $is_low_part),
            generate_gf256_simd_mul_row!(201, $is_low_part),
            generate_gf256_simd_mul_row!(202, $is_low_part),
            generate_gf256_simd_mul_row!(203, $is_low_part),
            generate_gf256_simd_mul_row!(204, $is_low_part),
            generate_gf256_simd_mul_row!(205, $is_low_part),
            generate_gf256_simd_mul_row!(206, $is_low_part),
            generate_gf256_simd_mul_row!(207, $is_low_part),
            generate_gf256_simd_mul_row!(208, $is_low_part),
            generate_gf256_simd_mul_row!(209, $is_low_part),
            generate_gf256_simd_mul_row!(210, $is_low_part),
            generate_gf256_simd_mul_row!(211, $is_low_part),
            generate_gf256_simd_mul_row!(212, $is_low_part),
            generate_gf256_simd_mul_row!(213, $is_low_part),
            generate_gf256_simd_mul_row!(214, $is_low_part),
            generate_gf256_simd_mul_row!(215, $is_low_part),
            generate_gf256_simd_mul_row!(216, $is_low_part),
            generate_gf256_simd_mul_row!(217, $is_low_part),
            generate_gf256_simd_mul_row!(218, $is_low_part),
            generate_gf256_simd_mul_row!(219, $is_low_part),
            generate_gf256_simd_mul_row!(220, $is_low_part),
            generate_gf256_simd_mul_row!(221, $is_low_part),
            generate_gf256_simd_mul_row!(222, $is_low_part),
            generate_gf256_simd_mul_row!(223, $is_low_part),
            generate_gf256_simd_mul_row!(224, $is_low_part),
            generate_gf256_simd_mul_row!(225, $is_low_part),
            generate_gf256_simd_mul_row!(226, $is_low_part),
            generate_gf256_simd_mul_row!(227, $is_low_part),
            generate_gf256_simd_mul_row!(228, $is_low_part),
            generate_gf256_simd_mul_row!(229, $is_low_part),
            generate_gf256_simd_mul_row!(230, $is_low_part),
            generate_gf256_simd_mul_row!(231, $is_low_part),
            generate_gf256_simd_mul_row!(232, $is_low_part),
            generate_gf256_simd_mul_row!(233, $is_low_part),
            generate_gf256_simd_mul_row!(234, $is_low_part),
            generate_gf256_simd_mul_row!(235, $is_low_part),
            generate_gf256_simd_mul_row!(236, $is_low_part),
            generate_gf256_simd_mul_row!(237, $is_low_part),
            generate_gf256_simd_mul_row!(238, $is_low_part),
            generate_gf256_simd_mul_row!(239, $is_low_part),
            generate_gf256_simd_mul_row!(240, $is_low_part),
            generate_gf256_simd_mul_row!(241, $is_low_part),
            generate_gf256_simd_mul_row!(242, $is_low_part),
            generate_gf256_simd_mul_row!(243, $is_low_part),
            generate_gf256_simd_mul_row!(244, $is_low_part),
            generate_gf256_simd_mul_row!(245, $is_low_part),
            generate_gf256_simd_mul_row!(246, $is_low_part),
            generate_gf256_simd_mul_row!(247, $is_low_part),
            generate_gf256_simd_mul_row!(248, $is_low_part),
            generate_gf256_simd_mul_row!(249, $is_low_part),
            generate_gf256_simd_mul_row!(250, $is_low_part),
            generate_gf256_simd_mul_row!(251, $is_low_part),
            generate_gf256_simd_mul_row!(252, $is_low_part),
            generate_gf256_simd_mul_row!(253, $is_low_part),
            generate_gf256_simd_mul_row!(254, $is_low_part),
            generate_gf256_simd_mul_row!(255, $is_low_part),
        ]
    };
}

#[cfg(not(feature = "parallel"))]
pub(crate) use generate_gf256_simd_mul_row;

#[cfg(not(feature = "parallel"))]
pub(crate) use generate_gf256_simd_mul_table;
